(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{474:function(t,e,n){"use strict";n.r(e);var s=n(2),v=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"interceptor接口详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interceptor接口详解"}},[t._v("#")]),t._v(" Interceptor接口详解")]),t._v(" "),e("ul",[e("li",[t._v("io.github.quickmsg.common.interceptor.Interceptor")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("必传")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Object doInterceptor(Invocation invocation)")]),t._v(" "),e("td",[t._v("拦截方法")]),t._v(" "),e("td",[t._v("是")])]),t._v(" "),e("tr",[e("td",[t._v("int order()")]),t._v(" "),e("td",[t._v("拦截排序")]),t._v(" "),e("td",[t._v("是")])])])]),t._v(" "),e("ul",[e("li",[t._v("Invocation  属性说明")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("必传")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("method")]),t._v(" "),e("td",[t._v("请求方法")]),t._v(" "),e("td",[t._v("是")])]),t._v(" "),e("tr",[e("td",[t._v("target")]),t._v(" "),e("td",[t._v("被代理类")]),t._v(" "),e("td",[t._v("是")])]),t._v(" "),e("tr",[e("td",[t._v("args")]),t._v(" "),e("td",[t._v("参数数组")]),t._v(" "),e("td",[t._v("是")])])])]),t._v(" "),e("ul",[e("li",[t._v("args  参数数组说明")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("index")]),t._v(" "),e("th",[t._v("类型")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("MqttChannel")]),t._v(" "),e("td",[t._v("mqtt请求channel")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("MqttChannel")])]),t._v(" "),e("tr",[e("td",[t._v("SmqttMessage"),e("MqttMessage")],1),t._v(" "),e("td",[t._v("smqtt消息体")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("SmqttMessage")])]),t._v(" "),e("tr",[e("td",[t._v("receiveContext")]),t._v(" "),e("td",[t._v("接收上下文")]),t._v(" "),e("td",[t._v("2")]),t._v(" "),e("td",[t._v("ReceiveContext")])])])]),t._v(" "),e("ul",[e("li",[t._v("SmqttMessage  属性说明")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("说明")]),t._v(" "),e("th",[t._v("类型")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("message")]),t._v(" "),e("td",[t._v("MqttMessage消息")]),t._v(" "),e("td",[t._v("T extends MqttMessage")])]),t._v(" "),e("tr",[e("td",[t._v("timestamp")]),t._v(" "),e("td",[t._v("时间戳")]),t._v(" "),e("td",[t._v("Long")])]),t._v(" "),e("tr",[e("td",[t._v("isCluster")]),t._v(" "),e("td",[t._v("是否集群消息")]),t._v(" "),e("td",[t._v("Boolean")])])])]),t._v(" "),e("ul",[e("li",[t._v("方法")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("public Object proceed()")]),t._v(" "),e("td",[t._v("放行拦截器")])])])]),t._v(" "),e("h2",{attrs:{id:"自定义拦截器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义拦截器"}},[t._v("#")]),t._v(" 自定义拦截器")]),t._v(" "),e("ul",[e("li",[t._v("实现接口")])]),t._v(" "),e("div",{staticClass:"language-markdown line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-markdown"}},[e("code",[t._v("\npublic class DemoInterceptor implements Interceptor {\n\n\n"),e("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("    @Override\n    public Object intercept(Invocation invocation) {\n        try {\n            MqttChannel mqttChannel = (MqttChannel) invocation.getArgs()[0];\n            SmqttMessage<MqttMessage> smqttMessage = (SmqttMessage<MqttMessage>) invocation.getArgs()[1];\n            ReceiveContext<Configuration> mqttReceiveContext = (ReceiveContext<Configuration>) invocation.getArgs()[2];")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("            // 拦截业务")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("            return invocation.proceed(); // 放行\n        } catch (InvocationTargetException e) {\n            e.printStackTrace();\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token code keyword"}},[t._v("    @Override\n    public int sort() {\n        return 0;\n    }")]),t._v("\n}\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br")])]),e("ul",[e("li",[t._v("SPI注入")])]),t._v(" "),e("p",[e("code",[t._v("具体参考java SPI注入")])]),t._v(" "),e("p",[t._v("resources/META-INF/services 目录下新建\n名为io.github.quickmsg.common.interceptor.Interceptor文件,\n将自定义实现类全限定名写入文件中即可完成注入。")]),t._v(" "),e("blockquote",[e("p",[t._v("拦截器会影响集群消息的广播，也会影响规则引擎，被拦截器过滤的消息是不会触发任何事件")])])])}),[],!1,null,null,null);e.default=v.exports}}]);